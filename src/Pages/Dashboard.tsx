import {AuthContext} from "../firebase/Auth"
import {useContext, useEffect, useState} from "react";
import { BrowserRouter as Router, Route, Switch, Link, Redirect } from "react-router-dom";
import firebase from "firebase";
import { tmpdir } from "os";
import ActiveUsers from "../Menu/ActiveUsers"

import InboxArea from "../Pages/Inbox"

const ReturnState = ({props} : any) => {
    return(
        <button onClick={
            e => {props(0)}
        }>
            Return 
        </button>
    )
}

const Dasbboard = () => {
    const {user} = useContext(AuthContext);
    const [option, setOption] = useState<number>(0);
    const [nu, setNu] = useState<number>(0);

    // useEffect(() => {
    //     firebase.database().ref("Messages")
    //     .on("value" , snap => {
    //         if(snap.numChildren() > nu){
    //             let num = 0;
    //         snap.forEach(e => {
    //             if(e.val().to === user.uid){
    //                 num++
    //                 setNu(num);
    //             }
    //         })
    //     }
    //     })

    // }, [nu, user.uid])

    const SvgBell = () => {
        return(
            <svg  width="48" height="54" viewBox="0 0 48 54" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="23.5" cy="46.5" r="5" fill="#F2F2F2" stroke="unset" stroke-width="5"/>
            <mask id="path-2-inside-1" fill="white">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M28.2253 6.34591C28.3717 5.8821 28.4507 5.38833 28.4507 4.87612C28.4507 2.18311 26.2676 0 23.5746 0C20.8816 0 18.6985 2.18311 18.6985 4.87612C18.6985 5.43775 18.7934 5.9772 18.9682 6.4793C11.6833 8.54857 6.27918 15.1385 6.03319 23.072L6.00151 24.0935C5.88309 27.9125 4.44345 31.7613 3.00362 35.6105C1.54119 39.5202 0.0785643 43.4304 0 47.3105H47.1493C47.1182 46.9087 47.0853 46.5227 47.0496 46.1515C46.7385 42.9164 45.6087 39.7547 44.479 36.5933C43.2681 33.2047 42.0573 29.8165 41.8551 26.3387L41.6372 22.59C41.1768 14.672 35.596 8.2098 28.2253 6.34591Z"/>
            </mask>
            <path fill-rule="evenodd" clip-rule="evenodd" d="M28.2253 6.34591C28.3717 5.8821 28.4507 5.38833 28.4507 4.87612C28.4507 2.18311 26.2676 0 23.5746 0C20.8816 0 18.6985 2.18311 18.6985 4.87612C18.6985 5.43775 18.7934 5.9772 18.9682 6.4793C11.6833 8.54857 6.27918 15.1385 6.03319 23.072L6.00151 24.0935C5.88309 27.9125 4.44345 31.7613 3.00362 35.6105C1.54119 39.5202 0.0785643 43.4304 0 47.3105H47.1493C47.1182 46.9087 47.0853 46.5227 47.0496 46.1515C46.7385 42.9164 45.6087 39.7547 44.479 36.5933C43.2681 33.2047 42.0573 29.8165 41.8551 26.3387L41.6372 22.59C41.1768 14.672 35.596 8.2098 28.2253 6.34591Z" fill="#F2F2F2"/>
            <path className={"transform:rotate(10deg);"} d="M28.2253 6.34591L23.4573 4.84047L21.8617 9.89409L26.9995 11.1933L28.2253 6.34591ZM18.9682 6.4793L20.3344 11.289L25.4321 9.84102L23.6904 4.836L18.9682 6.4793ZM6.03319 23.072L1.03559 22.917L1.03559 22.917L6.03319 23.072ZM6.00151 24.0935L10.9991 24.2484L10.9991 24.2484L6.00151 24.0935ZM3.00362 35.6105L7.68672 37.3623L7.68672 37.3623L3.00362 35.6105ZM0 47.3105L-4.99898 47.2093L-5.10226 52.3105H0V47.3105ZM47.1493 47.3105V52.3105H52.5508L52.1344 46.925L47.1493 47.3105ZM47.0496 46.1515L42.0726 46.6301L42.0726 46.6301L47.0496 46.1515ZM44.479 36.5933L39.7706 38.2758L39.7706 38.2758L44.479 36.5933ZM41.8551 26.3387L46.8467 26.0484L46.8467 26.0484L41.8551 26.3387ZM41.6372 22.59L36.6456 22.8802L36.6456 22.8802L41.6372 22.59ZM23.4507 4.87612C23.4507 4.87486 23.4508 4.87029 23.4519 4.8632C23.453 4.85621 23.4548 4.84846 23.4573 4.84047L32.9933 7.85135C33.2917 6.90622 33.4507 5.90499 33.4507 4.87612H23.4507ZM23.5746 5C23.5667 5 23.5466 4.99742 23.5248 4.98821C23.5064 4.98041 23.4946 4.97129 23.487 4.96372C23.4794 4.95614 23.4703 4.94431 23.4625 4.92587C23.4533 4.9041 23.4507 4.884 23.4507 4.87612H33.4507C33.4507 -0.578311 29.029 -5 23.5746 -5V5ZM23.6985 4.87612C23.6985 4.884 23.6959 4.9041 23.6867 4.92587C23.6789 4.94431 23.6698 4.95614 23.6622 4.96372C23.6546 4.97129 23.6428 4.98041 23.6244 4.98821C23.6026 4.99742 23.5825 5 23.5746 5V-5C18.1202 -5 13.6985 -0.578311 13.6985 4.87612H23.6985ZM23.6904 4.836C23.6934 4.8446 23.6956 4.85321 23.6969 4.8612C23.6983 4.86934 23.6985 4.87466 23.6985 4.87612H13.6985C13.6985 6.00475 13.8898 7.09932 14.2459 8.12261L23.6904 4.836ZM11.0308 23.227C11.2076 17.5259 15.0906 12.7785 20.3344 11.289L17.602 1.66957C8.27591 4.31862 1.35081 12.7512 1.03559 22.917L11.0308 23.227ZM10.9991 24.2484L11.0308 23.227L1.03559 22.917L1.00391 23.9385L10.9991 24.2484ZM7.68672 37.3623C9.05909 33.6934 10.8504 29.0443 10.9991 24.2484L1.00391 23.9385C0.915781 26.7808 -0.172194 29.8292 -1.67948 33.8588L7.68672 37.3623ZM4.99898 47.4117C5.05709 44.5415 6.15428 41.4591 7.68672 37.3623L-1.67948 33.8588C-3.0719 37.5813 -4.89996 42.3193 -4.99898 47.2093L4.99898 47.4117ZM47.1493 42.3105H0V52.3105H47.1493V42.3105ZM42.0726 46.6301C42.1047 46.9642 42.1349 47.3184 42.1641 47.696L52.1344 46.925C52.1014 46.4989 52.0659 46.0812 52.0267 45.6729L42.0726 46.6301ZM39.7706 38.2758C40.9417 41.5532 41.8314 44.122 42.0726 46.6301L52.0267 45.6729C51.6456 41.7108 50.2757 37.9562 49.1874 34.9108L39.7706 38.2758ZM36.8636 26.6289C37.1147 30.9487 38.6081 35.0227 39.7706 38.2758L49.1874 34.9108C47.9281 31.3867 46.9999 28.6842 46.8467 26.0484L36.8636 26.6289ZM36.6456 22.8802L36.8636 26.6289L46.8467 26.0484L46.6287 22.2998L36.6456 22.8802ZM26.9995 11.1933C32.3033 12.5345 36.3147 17.1893 36.6456 22.8802L46.6287 22.2998C46.0389 12.1547 38.8887 3.88506 29.4511 1.4985L26.9995 11.1933Z" fill="unset" mask="url(#path-2-inside-1)"/>
            </svg>

        )
    }

    const Inbox = ({props} : any) => {
        const [state, setState] = useState<number>(props)
        return(
            <Link to={"dashboard/inbox"}>
                <div className={state > 0 ? "inbox-message" :" "}>
                    <p>
                        Inbox {state}
                    </p>
                </div>
            </Link>
        )
    }


    useEffect(() => {
        
        const userTmp = firebase.database().ref("User/"+user?.uid)
        firebase.database().ref("User/").child(user?.uid).on("value", snapshot => {
            if(snapshot.val().id === user?.uid){
             setOption(1)
         }
        })
        if(option === 0){
            userTmp.update({
                id: user?.uid,
                active: true,
            })
        }
    }, [option, user?.uid])

    type options = {
        id: number;
        title: string | number,
        link : string,
        class : string
    }

    const OptionList : options[] = [
        {
            id: 1,
            title : "Create Room",
            link: "dashboard/create-room",
            class : ""
        },
        {
            id: 2,
            title : "Find Room",
            link: "dashboard/find-room",
            class : ""


        },

        {
            id: 3,
            title : "Active Users",
            link: "dashboard/active-users",
            class : ""


        },
        {
            id: 4,
            title : "Scores",
            link: "dashboard/score",
            class : ""

        },

    ]

    return(
        <div className={"app-body"}>


        <div className={"nav"}>
                {OptionList.map((o : options, index : number) => {
                        return (
                            <Link className={"link"} key={index} to={o.link}>{o.title}</Link>
                         )
                     })}
             {/* <Inbox props={nu}/> */}

        </div>

            {/* <ActiveUsers/> */}

        </div>
    )

  

}

export default Dasbboard